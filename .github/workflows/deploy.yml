# SSH_PRIVATE_KEY: 服务器上的私钥
# SERVER_HOST_IP：服务器的 ip

name: Deploy to Server
on:
  push:
    branches:
      - 'test' # 测试环境分支
      - 'main' # 生产环境分支

jobs:
  deploy:
    runs-on: ubuntu-latest
    # 根据分支来决定环境，main分支为生产环境，其他分支为test环境
    environment: ${{ github.ref == 'refs/heads/main' && 'production' || 'test' }}
    permissions:
      contents: write # 允许工作流写入内容（用于部署）
    steps:
      - name: Checkout repository
        uses: actions/checkout@v4

      - name: Setup Node.js
        uses: actions/setup-node@v4
        with:
          node-version: '22'

      - name: Create SSH key
        run: |
          mkdir -p ~/.ssh/
          echo "${{ secrets.SSH_PRIVATE_KEY }}" > ~/.ssh/private.key
          chmod 600 ~/.ssh/private.key
      - name: Add known hosts
        run: |
          ssh-keyscan -H ${{ secrets.SERVER_HOST_IP }} >> ~/.ssh/known_hosts

      # 创建.env文件并写入密钥
      - name: Create .env file
        run: |
          # 确保文件存在并以换行符结尾
          [ -f .env ] && echo "" >> .env || touch .env
          # echo "TENCENTCLOUD_SECRET_ID=${{ secrets.TENCENTCLOUD_SECRET_ID }}" >> .env
          # echo "TENCENTCLOUD_SECRET_KEY=${{ secrets.TENCENTCLOUD_SECRET_KEY }}" >> .env
          echo "DATABASE_URL=${{ secrets.DATABASE_URL }}" >> .env
          # echo "AUTHING_APP_ID=${{ secrets.AUTHING_APP_ID }}" >> .env
          # echo "AUTHING_SECRET=${{ secrets.AUTHING_SECRET }}" >> .env
          # echo "AUTHING_APP_HOST=${{ secrets.AUTHING_APP_HOST }}" >> .env
          # echo "WECHAT_PAY_DOMAIN=${{ secrets.WECHAT_PAY_DOMAIN }}" >> .env
          # echo "WECHAT_APPID=${{ secrets.WECHAT_APPID }}" >> .env
          # echo "WECHAT_APP_SECRET=${{ secrets.WECHAT_APP_SECRET }}" >> .env
          # echo "WECHAT_PAY_MERCHANT_ID=${{ secrets.WECHAT_PAY_MERCHANT_ID }}" >> .env# 
          # echo "WECHAT_PAY_PRIVATE_KEY=${{ secrets.WECHAT_PAY_PRIVATE_KEY }}" >> .env
          # echo "WECHAT_PAY_PUBLIC_KEY=${{ secrets.WECHAT_PAY_PUBLIC_KEY }}" >> .env
          # echo "WECHAT_PAY_API_V3_PRIVATE_KEY=${{ secrets.WECHAT_PAY_API_V3_PRIVATE_KEY }}" >> .env
          # echo "WECHAT_PAY_SERIAL_NO=${{ secrets.WECHAT_PAY_SERIAL_NO }}" >> .env
          # echo "ALIPAY_APP_ID=${{ secrets.ALIPAY_APP_ID }}" >> .env
          # echo "ALIPAY_PRIVATE_KEY=${{ secrets.ALIPAY_PRIVATE_KEY }}" >> .env
          # echo "ALIPAY_PUBLIC_KEY=${{ secrets.ALIPAY_PUBLIC_KEY }}" >> .env

          echo "API_SERVER_HOST=${{ vars.API_SERVER_HOST }}" >> .env
          # echo "CORS_DOMAIN=${{ vars.CORS_DOMAIN }}" >> .env
          # echo "MOCK_USER_ID=${{ vars.MOCK_USER_ID }}" >> .env
          # echo "PORT=${{ vars.PORT }}" >> .env

          # echo "JWT_SECRET=${{ secrets.JWT_SECRET }}" >> .env
          # echo "JWT_EXPIRES_IN=${{ vars.JWT_EXPIRES_IN }}" >> .env
          # echo "MOBILE_WHITE_LIST=${{ vars.MOBILE_WHITE_LIST }}" >> .env
          # echo "SMS_SIGN_NAME=${{ vars.SMS_SIGN_NAME }}" >> .env

      - name: Install pnpm
        run: npm install -g pnpm

      - name: Install dependencies
        run: pnpm install

      # - name: Run tests
      #   run: pnpm run test

      - name: Deploy to Server
        env:
          SERVER_HOST: ${{ secrets.SERVER_HOST_IP }}
          SERVER_USERNAME: ${{ secrets.SERVER_USERNAME }}
          DEPLOY_PATH: /app/sworld-server/${{ github.ref == 'refs/heads/main' && 'production' || 'test' }}
          NODE_ENV: ${{ github.ref == 'refs/heads/main' && 'production' || 'test' }}

        run: |
          npm run update-schema && \
          # 打包应用
          NODE_ENV=$NODE_ENV npm run build:server

          # 将应用文件传输到服务器
          rsync -avz --delete \
            -e "ssh -i ~/.ssh/private.key" \
            --exclude 'node_modules' \
            --exclude '.git' \
            --exclude '.github' \
            ./ $SERVER_USERNAME@$SERVER_HOST:$DEPLOY_PATH


          # 在远程服务器上执行部署命令
          ssh -i ~/.ssh/private.key $SERVER_USERNAME@$SERVER_HOST "cd $DEPLOY_PATH && \
            # 更新数据库
            pnpm install && \
            NODE_ENV=$NODE_ENV npx prisma migrate deploy && \
            npx prisma generate && \
            NODE_ENV=$NODE_ENV npm run restart:server"

          # 删除本地的私钥文件
          rm -rf ~/.ssh/private.key
      - name: Notify Feishu on success
        if: success()
        run: |
          # 获取最近一次提交的 commit message
          COMMIT_MESSAGE=$(git log -1 --pretty=format:"%s")

          curl -X POST -H "Content-Type: application/json" \
          -d '{
            "msg_type": "text",
            "content": {
              "text": "bioli.ink 部署成功！仓库：${{ github.repository }}，分支：${{ github.ref_name }}，最近一次提交信息：'"$COMMIT_MESSAGE"'"
            }
          }' ${{ secrets.FEISHU_ACTION_RESULT_WEBHOOK_URL }}
      - name: Notify Feishu on failure
        if: failure()
        run: |
          curl -X POST -H "Content-Type: application/json" \
          -d '{
            "msg_type": "text",
            "content": {
              "text": "bioli.ink 部署失败！仓库：${{ github.repository }}，分支：${{ github.ref_name }}"
            }
          }' ${{ secrets.FEISHU_ACTION_RESULT_WEBHOOK_URL }}
